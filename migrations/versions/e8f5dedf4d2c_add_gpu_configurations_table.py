"""add gpu configurations table

Revision ID: e8f5dedf4d2c
Revises: 4b13aaf8d4bf
Create Date: 2025-01-29 11:59:13.252515

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e8f5dedf4d2c'
down_revision = '4b13aaf8d4bf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('api_keys')
    with op.batch_alter_table('gpu_listings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('configuration_id', sa.Integer(), nullable=False))
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.create_foreign_key(None, 'gpu_configurations', ['configuration_id'], ['id'])
        batch_op.drop_column('gpu_name')
        batch_op.drop_column('memory')
        batch_op.drop_column('gpu_vendor')
        batch_op.drop_column('price_metric')
        batch_op.drop_column('gpu_count')
        batch_op.drop_column('disk_size')
        batch_op.drop_column('gpu_score')
        batch_op.drop_column('cpu')
        batch_op.drop_column('gpu_memory')
        batch_op.drop_column('number_of_gpus')

    with op.batch_alter_table('gpu_price_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('configuration_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('gpu_price_history_gpu_listing_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'gpu_configurations', ['configuration_id'], ['id'])
        batch_op.drop_column('gpu_listing_id')

    with op.batch_alter_table('hosts', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.create_unique_constraint(None, ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('hosts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('gpu_price_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gpu_listing_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('gpu_price_history_gpu_listing_id_fkey', 'gpu_listings', ['gpu_listing_id'], ['id'])
        batch_op.drop_column('configuration_id')

    with op.batch_alter_table('gpu_listings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('number_of_gpus', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gpu_memory', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('cpu', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gpu_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('disk_size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gpu_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_metric', sa.VARCHAR(length=10), server_default=sa.text("'USD/hour'::character varying"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('gpu_vendor', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('memory', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gpu_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('configuration_id')

    op.create_table('api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_used_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('permission', sa.VARCHAR(length=20), server_default=sa.text("'read'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='api_keys_pkey'),
    sa.UniqueConstraint('key', name='api_keys_key_key')
    )
    # ### end Alembic commands ###
